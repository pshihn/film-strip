class t{constructor(t){this.sources=t}async run(t){for(;t.lastChild;)t.removeChild(t.lastChild);for(const e of this.sources){const i=document.createElement("source");i.setAttribute("src",e.url),i.setAttribute("type",e.mime),t.appendChild(i)}return Promise.resolve()}}class e{async run(t){return new Promise(((e,i)=>{const s=()=>{t.removeEventListener("loadeddata",n),t.removeEventListener("error",h)},n=()=>{s(),e()},h=()=>{s(),i()};t.addEventListener("loadeddata",n),t.addEventListener("error",h),t.load()}))}}const i=new class{constructor(t=100){this.size=100,this._map=new Map,this._list=[],this.size=t}removeKeyFromList(t){let e=-1;for(let i=0;i<this._list.length;i++)if(this._list[i]===t){e=i;break}e>=0&&this._list.splice(e,1)}trim(){for(;this._list.length>this.size;){const t=this._list.shift();t&&this._map.delete(t)}}set(t,e){const i=this._map.has(t);this._map.set(t,e),i?(this.removeKeyFromList(t),this._list.push(t)):(this._list.push(t),this.trim())}get(t){return this._map.get(t)}delete(t){const e=this._map.delete(t);return e&&this.removeKeyFromList(t),e}clear(){this._list=[],this._map.clear()}};class s{constructor(t,e){this.canvas=t,this.time=e}seek(t){return new Promise((e=>{const i=()=>{t.removeEventListener("seeked",i),e()};t.addEventListener("seeked",i),t.currentTime=this.time}))}async run(t){const e=this.canvas.getContext("2d"),{width:s,height:n}=this.canvas;let h=i.get(this.time);if(!h){await this.seek(t),h=document.createElement("canvas"),h.width=s,h.height=n;h.getContext("2d").drawImage(t,0,0,s,n),i.set(this.time,h)}e.drawImage(h,0,0)}}class n{constructor(t){this.tasks=[],this.map=new Map,this.video=t}enqueue(t){return new Promise(((e,i)=>{const s=0!==this.tasks.length;this.tasks.push(t),this.map.set(t,{resolve:e,reject:i}),s||this.executeNext()}))}executeNext(){if(0===this.tasks.length)return;const t=this.tasks[0],e=async()=>{this.tasks.shift();const e=this.map.get(t);if(e){this.map.delete(t);try{await t.run(this.video),e.resolve()}catch(t){e.reject(t)}}this.executeNext()};window.setTimeout((()=>e()),0)}get metadata(){return{duration:this.video.duration,width:this.video.videoWidth,height:this.video.videoHeight}}async loadVideo(i,s="video/mp4"){return this.enqueue(new t([{url:i,mime:s}])),this.enqueue(new e)}async seekCapture(t,e){return this.enqueue(new s(t,e))}}class h{constructor(t,e){this.itemwidth=100,this.buffer=4,this.resizeDebounceInterval=250,this.count=0,this.cells=[],this.scrollHandler=()=>this.position(),this.currentRenderRange=[-1,-1],this.renderRanegDirty=!1,this.container=t,this.scrollElement=e}set delegate(t){this._delegate=t,this.refresh()}get scroller(){return this.scrollElement||this.container.parentElement||document.body}clear(){for(;this.container.hasChildNodes()&&this.container.lastChild;)this.container.removeChild(this.container.lastChild);this.cells=[],this.scroller.removeEventListener("scroll",this.scrollHandler),this.resizeHandler&&window.removeEventListener("resize",this.resizeHandler)}refresh(){this.clear(),this.count=this._delegate?this._delegate.length:0;const t=this.count*this.itemwidth;this.container.style.minWidth=t+"px",this.renderRanegDirty=!0,this.position(),this.scroller.addEventListener("scroll",this.scrollHandler),this.resizeHandler=function(t,e,i,s){let n=0;return()=>{const h=arguments,r=i&&!n;clearTimeout(n),n=window.setTimeout((()=>{n=0,i||t.apply(s,h)}),e),r&&t.apply(s,h)}}(this.position.bind(this),this.resizeDebounceInterval,!1,this),window.addEventListener("resize",this.resizeHandler)}position(){if(!this._delegate)return;const t=this.computeRanges()[1];if(!this.renderRanegDirty&&t[0]===this.currentRenderRange[0]&&t[1]===this.currentRenderRange[1])return;this.renderRanegDirty=!1,this.currentRenderRange=t;const e=new Map,i=this.cells.filter((i=>i.index<t[0]||i.index>t[1]||(e.set(i.index,i),!1))),s=[];for(let i=t[0];i<=t[1];i++)e.has(i)||s.push(i);for(;s.length&&i.length;){const t=s.shift(),n=i.shift();n.index=t,this._delegate.updateElement(n.node,t),this.positionCell(n.node,t),e.set(t,n)}for(;i.length;){const t=i.shift();this.container.removeChild(t.node)}for(;s.length;){const t=s.shift(),i=this._delegate.createElement();i.style.position="absolute",this.container.appendChild(i),this._delegate.updateElement(i,t),this.positionCell(i,t),e.set(t,{index:t,node:i})}this.cells=Array.from(e.values())}positionCell(t,e){t.style.transform=`translate(${Math.round(e*this.itemwidth)}px, 0)`}computeRanges(){const t=this.count*this.itemwidth||1,e=Math.max(0,Math.min(this.count-1,Math.floor(this.scroller.scrollLeft/(t||1)*this.count))),i=Math.max(0,Math.min(this.count-1,Math.floor((this.scroller.scrollLeft+this.scroller.getBoundingClientRect().width)/(t||1)*this.count))),s=Math.max(0,e-Math.floor(this.buffer/2));return[[e,i],[s,Math.min(this.count-1,i+this.buffer-(e-s))]]}scrollToIndex(t){this._delegate&&Number.isFinite(t)&&(t=Math.min(this._delegate.length,Math.max(0,t)),this.scroller.scrollLeft=t*this.itemwidth)}}class r extends HTMLElement{constructor(){super(),this._connected=!1,this._itemwidth=100,this._buffer=2,this.updateDeferred=!1,this.root=this.attachShadow({mode:"open"}),this.root.innerHTML='\n    <style>\n      :host {\n        display: block;\n        overflow: auto;\n        box-sizing: border-box;\n        width: 100%;\n        height: var(--virtual-list-height, 100px);\n      }\n      #container {\n        position: relative;\n        height: var(--virtual-list-height, 100px);\n        box-sizing: border-box;\n      }\n    </style>\n    <div id="container"></div>\n    '}connectedCallback(){this._connected=!0,this.update()}disconnectedCallback(){this._connected=!1,this.updateDeferred=!1,this.vl&&(this.vl.clear(),delete this.vl)}set itemWidth(t){this._itemwidth!==t&&(this._itemwidth=t,this.update())}set buffer(t){this._buffer!==t&&(this._buffer=t,this.update())}set delegate(t){this._delegate=t,this.update()}update(){this.updateDeferred||(this.updateDeferred=!0,Promise.resolve().then((()=>{this.updateDeferred=!1,this.doUpdate()})))}doUpdate(){this._connected&&(this.vl||(this.vl=new h(this.shadowRoot.querySelector("#container"),this)),this.vl.itemwidth=this._itemwidth,this.vl.buffer=this._buffer,this._delegate&&(this.vl.delegate=this._delegate))}refresh(){this.vl&&this.vl.position()}scrollToIndex(t){this.vl&&this.vl.scrollToIndex(t)}get container(){return this.shadowRoot.querySelector("#container")}}customElements.define("film-strip-list",r);class o extends HTMLElement{constructor(){super(),this.connected=!1,this._src="",this._type="video/mp4",this._rate=10,this.videoDuration=0,this.frameCount=0,this.cellHeight=100,this.cellWidth=100,this.cellGap=12,this.frameIndexMap=new WeakMap,this.root=this.attachShadow({mode:"open"}),this.root.innerHTML='\n    <style>\n      :host {\n        display: block;\n        position: relative;\n      }\n      #videoShell {\n        position: absolute;\n        top: 0;\n        left: 0;\n        overflow: hidden;\n        width: 0px;\n        height: 0px;\n        opacity: 0;\n        pointer-events: none;\n      }\n      film-strip-list {\n        -webkit-overflow-scrolling: touch;\n        overflow-x: auto;\n        overflow-y: hidden;\n        -ms-overflow-style: none;\n        scrollbar-width: none;\n      }\n      film-strip-list::-webkit-scrollbar {\n        width: 0px;\n        height: 0px;\n        background: transparent;\n      }\n    </style>\n    <film-strip-list></film-strip-list>\n    <div id="videoShell">\n      <video preload="none" playsinline webkit-playsinline muted></video>\n    </div>\n    '}static get observedAttributes(){return["src","type","rate","height"]}connectedCallback(){this.connected=!0,this.reload()}disconnectedCallback(){this.connected=!1}attributeChangedCallback(t,e,i){this[t]=i}get src(){return this._src}set src(t){t!==this._src&&(this._src=t,this.reload())}get type(){return this._type}set type(t){t!==this._type&&(this._type=t,this.reload())}get rate(){return this._rate}set rate(t){(t=+t)!==this._rate&&(this._rate=t,this.reload())}get height(){return this.cellHeight}set height(t){(t=+t)!==this.cellHeight&&(this.cellHeight=t,this.reload())}get video(){return this._video||(this._video=this.root.querySelector("video")),this._video}get strip(){return this._strip||(this._strip=this.root.querySelector("film-strip-list")),this._strip}async reload(){if(this.connected&&this._src){this.vm||(this.vm=new n(this.video)),await this.vm.loadVideo(this._src);const{duration:t,width:e,height:i}=this.vm.metadata;this.frameCount=Math.ceil(this.rate*t),this.videoDuration=t,e&&i&&(this.cellWidth=Math.round(e/i*this.cellHeight),this.strip.itemWidth=this.cellWidth+this.cellGap,this.strip.style.setProperty("--virtual-list-height",this.cellHeight+this.cellGap+"px")),this.strip.delegate=this}}get length(){return this.frameCount}createElement(){const t=document.createElement("canvas");return t.style.display="block",t.style.marginLeft=this.cellGap/2+"px",t.style.marginTop=this.cellGap/2+"px",t.width=this.cellWidth,t.height=this.cellHeight,t}updateElement(t,e){const i=t;this.frameIndexMap.set(i,e),this.renderFrame(e,i)}async renderFrame(t,e){const i=Math.max(0,Math.min(this.videoDuration,t/this.rate));await this.vm.seekCapture(e,i)}}customElements.define("film-strip",o);export{o as FilmStrip};
